#include<bits/stdc++.h>
using namespace std;
 
 
 
#define ll long long
#define ld long double
#define rep(i,a,b) for(ll i=a;i<b;i++)
#define repb(i,a,b) for(ll i=a;i>=b;i--)
#define err() cout<<"--------------------------"<<endl; 
#define errA(A) for(auto i:A)   cout<<i<<" ";cout<<endl;
#define err1(a) cout<<#a<<" "<<a<<endl
 
 
 
#define err2(a,b) cout<<#a<<" "<<a<<" "<<#b<<" "<<b<<endl
#define err3(a,b,c) cout<<#a<<" "<<a<<" "<<#b<<" "<<b<<" "<<#c<<" "<<c<<endl
#define err4(a,b,c,d) cout<<#a<<" "<<a<<" "<<#b<<" "<<b<<" "<<#c<<" "<<c<<" "<<#d<<" "<<d<<endl
#define pb push_back
#define all(A)  A.begin(),A.end()
#define allr(A)    A.rbegin(),A.rend()
#define ft first
#define sd second
#define MOD 1000000007
#define pii pair<int,int>
#define pll pair<ll,ll>
#define V vector<ll>
#define S set<ll>
#define VV vector<V>
#define Vpll vector<pll>
 #define yupp cout<<"YES"<<endl;
#define nope cout<<"NO"<<endl;
#define endl "\n"
bool sortbysec(const pair<int,int> &a,const pair<int,int> &b) 
{ 
    return (a.second < b.second); 
} 
int parent(int i,V &a)
{
    if(a[i]==i)
        return i;
    return parent(a[i],a);
}
void make_par(V &a,int x,int y)
{
    int para=parent(x,a);
    int parb=parent(y,a);
    a[parb]=para;
}
// // int comb[1001][1001];
// // rep(i,0,1001)
// // {
// // 	rep(j,0,1001)
// // 	{
// // 		if(i==0 || j==0)
// // 		{
// // 			comb[i][j]=1;
// // 		}
// // 		else
// // 		{
// // 			comb[i][j]=comb[i-1][j-1]+comb[i-1][j];
// // 		}
// // 	}
// // }
ll binaryexp(ll a,ll b,ll i)
{
	if(b==0)
		return 1LL;
	if(b==1)
		return a;
	ll k=binaryexp(a,b/2,i);
	if(b&1)
	{
		return (((k*k)%i)*a)%i;
	}
	else
		return (k*k)%i;
}
ll mini(ll a, ll b)
{
	if(a>b)
		return b;
	return a;
}
ll maxi(ll a, ll b)
{
	if(a>b)
		return a;
	return b;
}
int binarys(pii a[], int x,int n)
{
	int l=0,r=n;
	while(l<r)
	{
		int mid=(l+r)/2;
		if(a[mid].ft==x)
			return a[mid].sd;
		if(a[mid].ft>x)
		{
			r=mid;
		}
		else
		{
			l=mid+1;
		}
	}
	if(a[l].ft==x)
			return a[l].sd;
	return -1;
}
int main()
    {
 
        #ifndef ONLINE_JUDGE
         clock_t tStart = clock();
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);
        #endif
        int t;
        // cin>>t;
        t=1;  
        // int *dp=new int[1000001];
        // 	rep(i,0,1000001)
        // 	{
        // 		dp[i]=0;
        // 	}
        // 	rep(i,1,1000001)
        // 	{
        // 		for(int j=i;j<=1000001;j+=i)
        // 		{
        // 			dp[j]+=1;
        // 		}
        // 	}
        	// rep(i,0,1000001)
        	// {
        	// 	cout<<dp[i]<<" ";
        	// }
        // int *a=new int[1000001];
        // rep(i,0,1000001)
        // {
        // 	a[i]=1;
 
        // }
      
        while(t--)
        {
        	int n,x,flag=0;
        	cin>>n>>x;
        	pii *a=new pii[n];
        	rep(i,0,n)
        	{
        		cin>>a[i].ft;
        		a[i].sd=i;
        	}
        	sort(a,a+n);
        	rep(i,0,n)
        	{
        		// cout<<a[i].ft<<" "<<a[i].sd<<endl;
        	}
        	rep(i,0,n)
        	{
        		if(binarys(a,x-a[i].ft,n)!=-1 && binarys(a,x-a[i].ft,n)!=a[i].sd)
        		{
        			// cout<<a[i].ft<<" "<<a[binarys(a,x-a[i].ft,n)].ft<<endl;
        			cout<<a[i].sd+1<<" "<<binarys(a,x-a[i].ft,n)+1<<endl;
        			flag=1;
        			break;
        		}
        	}
        	if(flag==0)
        	{
        		cout<<"IMPOSSIBLE"<<endl;
        	}
        	// cout<<binarys(a,4,n)<<" "<<binarys(a,2,n)<<" "<<binarys(a,2,n);
 
        }
        
        #ifndef ONLINE_JUDGE
            printf("\nRun Time -> %.10fs\n", (double)(clock()-tStart) / CLOCKS_PER_SEC);
            #endif
}
